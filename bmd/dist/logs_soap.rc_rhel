#!/bin/bash

# chkconfig: 35 80 15
# Provides:          logsoap_server_2.3
# X-UnitedLinux-Should-Start: $network 
# X-UnitedLinux-Should-Stop: $network
# Required-Start: $network postgresql
# Default-Start:     3 5
# Default-Stop:      0 1 2 6
# Short-Description: Serwer SOAP dla Serwera Logów
# Description:       Uruchamia serwer SOAP dla Serwera Logów

. /etc/init.d/functions

#####################USTAWIENIA##########################
if [ -z $BMD_DOMAINS_DIR ];
then
#katalog z plikami konfiguracyjnymi domen
BMD_DOMAINS_DIR=/etc/sysconfig/logs_soap.d
fi

#ścieżka bezwzględna do aplikacji logsoap_server_2.3
BMD_BIN="/usr/bin/logsoap_server_2.3"
ONLY_BIN="logsoap_server_2.3"
DOMAIN_VERSION="DOMAIN VERSION: 2.3"
#########################################################


if ! [ -e $BMD_DOMAINS_DIR ]
then
	echo "Cannot find $BMD_DOMAINS_DIR directory. Try exporting variable"
	echo "     export BMD_DOMAINS_DIR=/path/to/logs_soap.d"
	echo "By default the directory is /etc/sysconfig/logs_soap.d"
	exit -1
fi

#uruchom jedną instancję logsoap_server_2.3
startone() {
	BMD_DOMAIN_NAME=$1	#nazwa domeny
	
	BMD_DOMAIN_CONF_FILE="${BMD_DOMAINS_DIR}/${BMD_DOMAIN_NAME}.conf"
	#echo $BMD_DOMAIN_CONF_FILE
	
	#sprawdzamy, czy podano istniejącą domenę	
	if ! [ -e "${BMD_DOMAINS_DIR}/${BMD_DOMAIN_NAME}.conf" ]
	then
		echo "Domain $BMD_DOMAIN_NAME is not configured."
		return -1
	fi


	if ! grep -q "$DOMAIN_VERSION" ${BMD_DOMAINS_DIR}/${BMD_DOMAIN_NAME}.conf; then
		echo "Domain $BMD_DOMAIN_NAME has not $DOMAIN_VERSION in configuration"
		return -1
	fi

	
	if [ -z "`cat $BMD_DOMAIN_CONF_FILE | grep -v '#' | egrep --regexp='\<'${BMD_DOMAIN_NAME}'\>'`" ]
	then
		echo "Domain $BMD_DOMAIN_NAME not found in file $BMD_DOMAIN_CONF_FILE!"
		return -1
	fi

	#pobieramy info o danej domenie
	BMD_DOMAIN_NAME=`cat $BMD_DOMAIN_CONF_FILE | grep -v "#" | grep $BMD_DOMAIN_NAME | awk '{ print $1 }'`
	BMD_USER=`cat $BMD_DOMAIN_CONF_FILE | grep -v "#" | grep $BMD_DOMAIN_NAME | awk '{ print $2 }'`
	BMD_CONF=`cat $BMD_DOMAIN_CONF_FILE | grep -v "#" | grep $BMD_DOMAIN_NAME | awk '{ print $3 }'`
	BMD_ARGS=`cat $BMD_DOMAIN_CONF_FILE | grep -v "#" | grep $BMD_DOMAIN_NAME | awk '{ printf "%s %s %s %s %s", $4, $5, $6, $7, $8, $9 }'`

	if [ -z "$BMD_ARGS" ] ; then
		BMD_ARGS=""
	fi

	PROG="${ONLY_BIN}_${BMD_DOMAIN_NAME}"
	LOCK="/var/lock/subsys/$PROG"
	PIDFILE="/var/run/$PROG.pid"

	PID_FROM_FILE=""
	#sprawdzamy, czy domena jest uruchomiona
	if [ -e $PIDFILE ]; then
		PID_FROM_FILE=`head -n 1 $PIDFILE`
	fi

	PID_FROM_PS=""
	if [ $PID_FROM_FILE ]; then
		PID_FROM_PS=`ps -C $ONLY_BIN -o pid | grep $PID_FROM_FILE`
	else
		if [ -e $LOCK ]; then
			echo "Not running but lock $LOCK is set! Please remove it manualy!"
			return -1
		else
			#OK not running
			PID_FROM_FILE=""
		fi
	fi

	if [ $PID_FROM_PS ]; then
		if [ -e $LOCK ]; then
			echo "Domain $BMD_DOMAIN_NAME is already being executed."
			return 0
		else
			echo "Domain $BMD_DOMAIN_NAME is already being executed but no lock $LOCK set!"
			return -1
		fi
	else
		if [ -e $LOCK ]; then
			echo "Not running but lock $LOCK is set! Please remove it manualy!"
			return -1
		fi
	fi

	echo -n "Starting domain $BMD_DOMAIN_NAME...	"

	cd /tmp
	daemon --user $BMD_USER $BMD_BIN -c $BMD_CONF $BMD_ARGS 2>&1 |logger -t $BMD_DOMAIN_NAME &
	sleep 3
	if ! [ -z "`ps -f -C $ONLY_BIN | grep $BMD_CONF`" ]; then
		echo "[started]"
		touch $LOCK
		echo "`ps -f -C $ONLY_BIN | grep $BMD_CONF | awk '{ print $2 }'`" > $PIDFILE
		return 0
	else
		echo "[failed]"
		echo "See /var/log/messages for more information"
		return -1
	fi
}

#zatrzymaj jedną instancję logsoap_server_2.3
stopone()
{
	BMD_DOMAIN_NAME=$1	#nazwa domeny
	
	BMD_DOMAIN_CONF_FILE="${BMD_DOMAINS_DIR}/${BMD_DOMAIN_NAME}.conf"
	
	#sprawdzamy, czy podano istniejącą domenę
	if ! [ -e "${BMD_DOMAINS_DIR}/${BMD_DOMAIN_NAME}.conf" ]
	then
		echo "Domain $BMD_DOMAIN_NAME is not configured."
		return -1
	fi


	if ! grep -q "$DOMAIN_VERSION" ${BMD_DOMAINS_DIR}/${BMD_DOMAIN_NAME}.conf; then
		echo "Domain $BMD_DOMAIN_NAME has not $DOMAIN_VERSION in configuration"
		return -1
	fi

	
	if [ -z "`cat $BMD_DOMAIN_CONF_FILE | grep -v '#' | egrep --regexp='\<'${BMD_DOMAIN_NAME}'\>'`" ]
	then
		echo "Domain $BMD_DOMAIN_NAME not found in file $BMD_DOMAIN_CONF_FILE!"
		return -1
	fi

	#pobieramy info o danej domenie
	BMD_DOMAIN_NAME=`cat $BMD_DOMAIN_CONF_FILE | grep -v "#" | grep $BMD_DOMAIN_NAME | awk '{ print $1 }'`
	PROG="${ONLY_BIN}_${BMD_DOMAIN_NAME}"
	LOCK="/var/lock/subsys/$PROG"
	PIDFILE="/var/run/$PROG.pid"
	
	PID_FROM_FILE=""
	#sprawdzamy, czy domena jest uruchomiona
	if [ -e $PIDFILE ]; then
		PID_FROM_FILE=`head -n 1 $PIDFILE`
	fi

	PID_FROM_PS=""
	if [ $PID_FROM_FILE ]; then
		PID_FROM_PS=`ps -C $ONLY_BIN -o pid | grep $PID_FROM_FILE`
	else
		if [ -e $LOCK ]; then
			echo "Not running but lock $LOCK is set! Please remove it manualy!"
		else
			#OK not running
			echo "Process isn't being executed"
		fi
		return 0
	fi

	if [ $PID_FROM_PS ]; then
		if [ -e $LOCK ]; then
			echo "Stopping domain $BMD_DOMAIN_NAME..."
			kill `head -n 1 $PIDFILE`
			sleep 3
			rm -rf $PIDFILE
			rm -rf $LOCK
			return 0
		else
			echo "No lock $LOCK set!"
			echo "Stopping domain $BMD_DOMAIN_NAME..."
			kill `head -n 1 $PIDFILE`
			sleep 3
			rm -rf $PIDFILE
			return 0;
		fi
	else
		if [ -e $LOCK ]; then
			echo "Not running but lock $LOCK is set! Please remove it manualy!"
		else
			echo "Not running but pidfile $PIDFILE is set! Please remove it manualy!"
		fi
	fi
	return 0;

}

#uruchom wszystkie domeny z pliku konfiguracyjnego
start()
{
	for x in `ls -ABl $BMD_DOMAINS_DIR | egrep "conf$" | awk '{ print $9 }' | sed s/.conf//`
	do
		if grep -q "$DOMAIN_VERSION" ${BMD_DOMAINS_DIR}/$x.conf; then
			echo -n "$x...		"
			startone $x
		fi
	done
	return 0
}

#zatrzymaj wszystkie domeny z pliku konfiguracyjnego
stop() {
	for x in `ls -ABl $BMD_DOMAINS_DIR | egrep "conf$" | awk '{ print $9 }' | sed s/.conf//`
	do
		if grep -q "$DOMAIN_VERSION" ${BMD_DOMAINS_DIR}/$x.conf; then
			echo -n "$x	"
			stopone $x
		fi
	done
	return 0
}

#informacje o stanie danej jako parametr domeny
stateone()
{
	BMD_DOMAIN_NAME=$1
	BMD_DOMAIN_CONF_FILE="${BMD_DOMAINS_DIR}/${BMD_DOMAIN_NAME}.conf"
	
	#sprawdzamy, czy podano istniejącą domenę
	if ! [ -e "${BMD_DOMAINS_DIR}/${BMD_DOMAIN_NAME}.conf" ]
	then
		echo "Domain $BMD_DOMAIN_NAME is not configured."
		return -1
	fi


	if ! grep -q "$DOMAIN_VERSION" ${BMD_DOMAINS_DIR}/${BMD_DOMAIN_NAME}.conf; then
		echo "Domain $BMD_DOMAIN_NAME has not $DOMAIN_VERSION in configuration"
		return -1
	fi

	
	if [ -z "`cat $BMD_DOMAIN_CONF_FILE | grep -v '#' | egrep --regexp='\<'${BMD_DOMAIN_NAME}'\>'`" ]
	then
		echo "Domain $BMD_DOMAIN_NAME not found in file $BMD_DOMAIN_CONF_FILE!"
		return -1
	fi

	#pobieramy info o danej domenie
	BMD_DOMAIN_NAME=`cat $BMD_DOMAIN_CONF_FILE | grep -v "#" | grep $BMD_DOMAIN_NAME | awk '{ print $1 }'`
	PROG="${ONLY_BIN}_${BMD_DOMAIN_NAME}"
	LOCK="/var/lock/subsys/$PROG"
	PIDFILE="/var/run/$PROG.pid"

	PID_FROM_FILE=""	
	#sprawdzamy, czy domena jest uruchomiona
	if [ -e $PIDFILE ]; then
		PID_FROM_FILE=`head -n 1 $PIDFILE`
	fi

	PID_FROM_PS=""
	if [ $PID_FROM_FILE ]; then
		PID_FROM_PS=`ps -C $ONLY_BIN -o pid | grep $PID_FROM_FILE`
	else
		if [ -e $LOCK ]; then
			echo "Not running but lock $LOCK is set! Please remove it manualy!"
		else
			#OK not running
			echo "Not running"
		fi
		return 0
	fi

	if [ $PID_FROM_PS ]; then
		if [ -e $LOCK ]; then
			echo "Running (`head -n 1 $PIDFILE`)"
		else
			echo "No lock $LOCK set!"
		fi
	else
		if [ -e $LOCK ]; then
			echo "Not running but lock $LOCK is set! Please remove it manualy!"
		else
			echo "Not running but pidfile $PIDFILE is set! Please remove it manualy!"
		fi
	fi
	return 0;

}

#sprawdzamy stan wszystkich domen z pliku konfiguracyjnego
state()
{
	for x in `ls -ABl $BMD_DOMAINS_DIR | egrep "conf$" | awk '{ print $9 }' | sed s/.conf//`
	do
		if grep -q "$DOMAIN_VERSION" ${BMD_DOMAINS_DIR}/$x.conf; then
			echo -n "$x:	"
			stateone $x
		fi
	done
}

case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	status)
		state
		;;
	statusone)
		if [ "$#" -lt 2 ]; then
			echo "No domain specified!"
		else
			stateone $2
		fi
		;;
	startone)
		if [ "$#" -lt 2 ]; then
			echo "No domain specified!"
		else
			startone $2
		fi
		;;
	stopone)
		if [ "$#" -lt 2 ]; then
			echo "No domain specified!"
		else
			stopone $2
		fi
		;;
	restart)
		stop
		start
		;;
	restartone)
		if [ "$#" -lt 2 ]; then
			echo "No domain specified!"
		else
			stopone $2
			startone $2
		fi
		;;
	*)
		echo -n "Usage: start | stop | restart | restartone domain_name | status |statusone domain_name |"
		echo " startone domain_name | stopone domain_name"
		;;
esac 
