/* logStub.h
   Generated by gSOAP 2.7.17 from logsoap.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef logStub_H
#define logStub_H
#ifndef WITH_NONAMESPACES
#define WITH_NONAMESPACES
#endif
#include "stdsoap2.h"
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_log__logDatagram
#define SOAP_TYPE_log__logDatagram (8)
/* log:logDatagram */
struct log__logDatagram
{
	char *remoteHost;	/* optional element of type xsd:string */
	char *remotePort;	/* optional element of type xsd:string */
	char *srcFile;	/* optional element of type xsd:string */
	char *srcLine;	/* optional element of type xsd:string */
	char *srcFunction;	/* optional element of type xsd:string */
	char *logOwner;	/* optional element of type xsd:string */
	char *service;	/* optional element of type xsd:string */
	char *operationType;	/* optional element of type xsd:string */
	char *logLevel;	/* optional element of type xsd:string */
	char *dateTimeBegin;	/* optional element of type xsd:string */
	char *logString;	/* optional element of type xsd:string */
	char *logReason;	/* optional element of type xsd:string */
	char *logSolution;	/* optional element of type xsd:string */
	char *documentSize;	/* optional element of type xsd:string */
	char *documentFilename;	/* optional element of type xsd:string */
	char *logReferto;	/* optional element of type xsd:string */
	char *eventCode;	/* optional element of type xsd:string */
	char *logOwnerEventVisible;	/* optional element of type xsd:string */
	char *logRefertoEventVisible;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_log__logServerSendResponse
#define SOAP_TYPE_log__logServerSendResponse (13)
/* log:logServerSendResponse */
struct log__logServerSendResponse
{
	long *result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE_log__logServerSend
#define SOAP_TYPE_log__logServerSend (14)
/* log:logServerSend */
struct log__logServerSend
{
	struct log__logDatagram *logDatagram;	/* optional element of type log:logDatagram */
};
#endif

#ifndef SOAP_TYPE_log__verifyLogResponse
#define SOAP_TYPE_log__verifyLogResponse (16)
/* log:verifyLogResponse */
struct log__verifyLogResponse
{
	long *result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE_log__verifyLog
#define SOAP_TYPE_log__verifyLog (17)
/* log:verifyLog */
struct log__verifyLog
{
	long logNode;	/* required element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE_log__verifyTreeResponse
#define SOAP_TYPE_log__verifyTreeResponse (19)
/* log:verifyTreeResponse */
struct log__verifyTreeResponse
{
	long *result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE_log__verifyTree
#define SOAP_TYPE_log__verifyTree (20)
/* log:verifyTree */
struct log__verifyTree
{
	long signNode;	/* required element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (21)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (22)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (24)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (27)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (28)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (7)
typedef char *xsd__string;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 log__logServerSend(struct soap*, struct log__logDatagram *logDatagram, long *result);

SOAP_FMAC5 int SOAP_FMAC6 log__verifyLog(struct soap*, long logNode, long *result);

SOAP_FMAC5 int SOAP_FMAC6 log__verifyTree(struct soap*, long signNode, long *result);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 log_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 log_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_log__logServerSend(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_log__verifyLog(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_log__verifyTree(struct soap*);

/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_log__logServerSend(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct log__logDatagram *logDatagram, long *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_log__verifyLog(struct soap *soap, const char *soap_endpoint, const char *soap_action, long logNode, long *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_log__verifyTree(struct soap *soap, const char *soap_endpoint, const char *soap_action, long signNode, long *result);

#ifdef __cplusplus
}
#endif

#endif

/* End of logStub.h */
