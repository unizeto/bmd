/* soapQueueManagerBindingProxy.h
   Generated by gSOAP 2.7.10 from mq.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapQueueManagerBindingProxy_H
#define soapQueueManagerBindingProxy_H
#include "soapH.h"
class QueueManagerBinding
{   public:
	/// Runtime engine context allocated in constructor
	struct soap *soap;
	/// Endpoint URL of service 'QueueManagerBinding' (change as needed)
	const char *endpoint;
	/// Constructor allocates soap engine context, sets default endpoint URL, and sets namespace mapping table
	QueueManagerBinding()
	{ soap = soap_new(); endpoint = "http://192.168.156.209:8081/MessageRouter-Router/QueueManager"; if (soap && !soap->namespaces) { static const struct Namespace namespaces[] = 
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://queuemanager.messagerouter.unizeto.pl/", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap->namespaces = namespaces; } };
	/// Destructor frees deserialized data and soap engine context
	virtual ~QueueManagerBinding() { if (soap) { soap_destroy(soap); soap_end(soap); soap_free(soap); } };
	/// Invoke 'put' of service 'QueueManagerBinding' and return error code (or SOAP_OK)
	virtual int ns1__put(std::string _messageBody, std::string _messageType, std::string _messageSender, struct ns1__putResponse &_param_1) { return soap ? soap_call_ns1__put(soap, endpoint, NULL, _messageBody, _messageType, _messageSender, _param_1) : SOAP_EOM; };
};
#endif
