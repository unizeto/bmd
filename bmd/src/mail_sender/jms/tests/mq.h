// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* mq.h
   Generated by wsdl2h 1.2.10 from http://192.168.156.209:8081/MessageRouter-Router/QueueManager?wsdl and typemap.dat
   2010-01-07 08:45:33 GMT
   Copyright (C) 2001-2008 Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'WS/typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

   DO NOT include this file directly into your project.
   Include only the soapcpp2-generated headers and source code files.
*/

//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * http://queuemanager.messagerouter.unizeto.pl/                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to disable)
/* #import "/tmp/gsoap-2.7/gsoap/import/stlvector.h" */
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://queuemanager.messagerouter.unizeto.pl/"

*/


/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/



/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	QueueManagerBinding 
//gsoap ns1  service type:	QueueManager 
//gsoap ns1  service port:	http://192.168.156.209:8081/MessageRouter-Router/QueueManager 
//gsoap ns1  service namespace:	http://queuemanager.messagerouter.unizeto.pl/ 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage QueueManagerService Definitions

@section QueueManagerService_bindings Bindings
  - @ref QueueManagerBinding

*/

/**

@page QueueManagerBinding Binding "QueueManagerBinding"

@section QueueManagerBinding_operations Operations of Binding  "QueueManagerBinding"
  - @ref ns1__put

@section QueueManagerBinding_ports Endpoints of Binding  "QueueManagerBinding"
  - http://192.168.156.209:8081/MessageRouter-Router/QueueManager

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * QueueManagerBinding                                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * ns1__put                                                                   *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__putResponse" of service binding "QueueManagerBinding" operation "ns1__put"
struct ns1__putResponse
{
    bool                                _return_;
};

/// Operation "ns1__put" of service binding "QueueManagerBinding"

/**

Operation details:

  - SOAP RPC literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__put(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         messageBody,
    std::string                         messageType,
    std::string                         messageSender,
    // response parameters:
    struct ns1__putResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__put(
    struct soap *soap,
    // request parameters:
    std::string                         messageBody,
    std::string                         messageType,
    std::string                         messageSender,
    // response parameters:
    struct ns1__putResponse&
  );
@endcode

C++ proxy class (defined in soapQueueManagerBindingProxy.h):
  class QueueManagerBinding;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns1  service method-style:	put rpc
//gsoap ns1  service method-encoding:	put literal
//gsoap ns1  service method-action:	put ""
int ns1__put(
    std::string                         _messageBody,	///< Request parameter
    std::string                         _messageType,	///< Request parameter
    std::string                         _messageSender,	///< Request parameter
    struct ns1__putResponse            &	///< Response struct parameter
);

/* End of mq.h */
